/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * SimpleWallet.h
 *
 * 
 */

#ifndef SimpleWallet_H_
#define SimpleWallet_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  SimpleWallet
    : public ModelBase
{
public:
    SimpleWallet();
    virtual ~SimpleWallet();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SimpleWallet members

    /// <summary>
    /// The current balance of the wallet
    /// </summary>
    double getBalance() const;
    void setBalance(double value);
    bool balanceIsSet() const;
    void unsetBalance();
    /// <summary>
    /// The ISO currency code for the wallet
    /// </summary>
    utility::string_t getCode() const;
    void setCode(utility::string_t value);
    bool codeIsSet() const;
    void unsetCode();
    /// <summary>
    /// The name of the currency stored in the wallet
    /// </summary>
    utility::string_t getCurrencyName() const;
    void setCurrencyName(utility::string_t value);
    bool currency_nameIsSet() const;
    void unsetCurrency_name();
    /// <summary>
    /// The unique ID of the wallet
    /// </summary>
    int32_t getId() const;
    void setId(int32_t value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// The ID of the user to whom the wallet belongs
    /// </summary>
    int32_t getUserId() const;
    void setUserId(int32_t value);
    bool user_idIsSet() const;
    void unsetUser_id();

protected:
    double m_Balance;
    bool m_BalanceIsSet;
utility::string_t m_Code;
    bool m_CodeIsSet;
utility::string_t m_Currency_name;
    bool m_Currency_nameIsSet;
int32_t m_Id;
    bool m_IdIsSet;
int32_t m_User_id;
    bool m_User_idIsSet;
};

}
}
}
}

#endif /* SimpleWallet_H_ */
