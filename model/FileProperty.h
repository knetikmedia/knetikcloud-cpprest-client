/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.2.3.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * FileProperty.h
 *
 * 
 */

#ifndef FileProperty_H_
#define FileProperty_H_


#include <cpprest/details/basic_types.h>
#include "Property.h"

namespace com {
namespace knetikcloud {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  FileProperty
    : public Property
{
public:
    FileProperty();
    virtual ~FileProperty();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// FileProperty members

    /// <summary>
    /// A crc value for file integrity verification
    /// </summary>
    utility::string_t getCrc() const;
    bool crcIsSet() const;
    void unsetCrc();
    void setCrc(utility::string_t value);
    /// <summary>
    /// A description of the file
    /// </summary>
    utility::string_t getDescription() const;
    bool descriptionIsSet() const;
    void unsetDescription();
    void setDescription(utility::string_t value);
    /// <summary>
    /// The type of file such as txt, mp3, mov or csv
    /// </summary>
    utility::string_t getFileType() const;
    bool fileTypeIsSet() const;
    void unsetFile_type();
    void setFileType(utility::string_t value);
    /// <summary>
    /// The url of the file
    /// </summary>
    utility::string_t getUrl() const;
    bool urlIsSet() const;
    void unsetUrl();
    void setUrl(utility::string_t value);

protected:
    utility::string_t m_Crc;
    bool m_CrcIsSet;
    utility::string_t m_Description;
    bool m_DescriptionIsSet;
    utility::string_t m_File_type;
    bool m_File_typeIsSet;
    utility::string_t m_Url;
    bool m_UrlIsSet;
};

}
}
}
}

#endif /* FileProperty_H_ */
