/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.2.3.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * StateResource.h
 *
 * 
 */

#ifndef StateResource_H_
#define StateResource_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace knetikcloud {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  StateResource
    : public ModelBase
{
public:
    StateResource();
    virtual ~StateResource();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// StateResource members

    /// <summary>
    /// The code of the state
    /// </summary>
    utility::string_t getCode() const;
    bool codeIsSet() const;
    void unsetCode();
    void setCode(utility::string_t value);
    /// <summary>
    /// The iso3 of the country this state is in
    /// </summary>
    utility::string_t getCountryCodeIso3() const;
    bool countryCodeIso3IsSet() const;
    void unsetCountry_code_iso3();
    void setCountryCodeIso3(utility::string_t value);
    /// <summary>
    /// The unique ID for the state
    /// </summary>
    int32_t getId() const;
    bool idIsSet() const;
    void unsetId();
    void setId(int32_t value);
    /// <summary>
    /// The name of the state
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();
    void setName(utility::string_t value);

protected:
    utility::string_t m_Code;
    bool m_CodeIsSet;
    utility::string_t m_Country_code_iso3;
    bool m_Country_code_iso3IsSet;
    int32_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Name;
    bool m_NameIsSet;
};

}
}
}
}

#endif /* StateResource_H_ */
