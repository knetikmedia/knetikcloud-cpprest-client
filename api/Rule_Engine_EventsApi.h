/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.3.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * Rule_Engine_EventsApi.h
 *
 * 
 */

#ifndef Rule_Engine_EventsApi_H_
#define Rule_Engine_EventsApi_H_


#include "ApiClient.h"

#include "BreEvent.h"
#include "Result.h"
#include <cpprest/details/basic_types.h>

namespace com {
namespace knetikcloud {
namespace client {
namespace api {

using namespace com::knetikcloud::client::model;

class  Rule_Engine_EventsApi
{
public:
    Rule_Engine_EventsApi( std::shared_ptr<ApiClient> apiClient );
    virtual ~Rule_Engine_EventsApi();
    /// <summary>
    /// Fire a new event, based on an existing trigger
    /// </summary>
    /// <remarks>
    /// Parameters within the event must match names and types from the trigger. Actual rule execution is asynchornous.  Returns request id, which will be used as the event id. &lt;br&gt;&lt;br&gt;&lt;b&gt;Permissions Needed:&lt;/b&gt; BRE_RULE_ENGINE_EVENTS_USER
    /// </remarks>
    /// <param name="breEvent">The BRE event object (optional)</param>
    pplx::task<utility::string_t> sendBREEvent(std::shared_ptr<BreEvent> breEvent);

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* Rule_Engine_EventsApi_H_ */

