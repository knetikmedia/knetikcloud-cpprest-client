/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * Language.h
 *
 * 
 */

#ifndef Language_H_
#define Language_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace knetikcloud {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  Language
    : public ModelBase
{
public:
    Language();
    virtual ~Language();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Language members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCode() const;
    void setCode(utility::string_t value);
    bool codeIsSet() const;
    void unsetCode();
    /// <summary>
    /// 
    /// </summary>
    int64_t getDateCreated() const;
    void setDateCreated(int64_t value);
    bool date_createdIsSet() const;
    void unsetDate_created();
    /// <summary>
    /// 
    /// </summary>
    int64_t getDateUpdated() const;
    void setDateUpdated(int64_t value);
    bool date_updatedIsSet() const;
    void unsetDate_updated();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDescription() const;
    void setDescription(utility::string_t value);
    bool descriptionIsSet() const;
    void unsetDescription();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDirection() const;
    void setDirection(utility::string_t value);
    bool directionIsSet() const;
    void unsetDirection();
    /// <summary>
    /// 
    /// </summary>
    int32_t getId() const;
    void setId(int32_t value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// 
    /// </summary>
    bool getIsPrimary() const;
    void setIsPrimary(bool value);
    bool is_primaryIsSet() const;
    void unsetIs_primary();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    void setName(utility::string_t value);
    bool nameIsSet() const;
    void unsetName();

protected:
    utility::string_t m_Code;
    bool m_CodeIsSet;
int64_t m_Date_created;
    bool m_Date_createdIsSet;
int64_t m_Date_updated;
    bool m_Date_updatedIsSet;
utility::string_t m_Description;
    bool m_DescriptionIsSet;
utility::string_t m_Direction;
    bool m_DirectionIsSet;
int32_t m_Id;
    bool m_IdIsSet;
bool m_Is_primary;
    bool m_Is_primaryIsSet;
utility::string_t m_Name;
    bool m_NameIsSet;
};

}
}
}
}

#endif /* Language_H_ */
