/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * OauthAccessTokenResource.h
 *
 * 
 */

#ifndef OauthAccessTokenResource_H_
#define OauthAccessTokenResource_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  OauthAccessTokenResource
    : public ModelBase
{
public:
    OauthAccessTokenResource();
    virtual ~OauthAccessTokenResource();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// OauthAccessTokenResource members

    /// <summary>
    /// The key of the client assosciated with the token
    /// </summary>
    utility::string_t getClientId() const;
    void setClientId(utility::string_t value);
    bool client_idIsSet() const;
    void unsetClient_id();
    /// <summary>
    /// The token.  Not shown in list view
    /// </summary>
    utility::string_t getToken() const;
    void setToken(utility::string_t value);
    bool tokenIsSet() const;
    void unsetToken();
    /// <summary>
    /// The username of the user associated with the token
    /// </summary>
    utility::string_t getUsername() const;
    void setUsername(utility::string_t value);
    bool usernameIsSet() const;
    void unsetUsername();

protected:
    utility::string_t m_Client_id;
    bool m_Client_idIsSet;
utility::string_t m_Token;
    bool m_TokenIsSet;
utility::string_t m_Username;
    bool m_UsernameIsSet;
};

}
}
}
}

#endif /* OauthAccessTokenResource_H_ */
