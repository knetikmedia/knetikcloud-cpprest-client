/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * StateTaxResource.h
 *
 * 
 */

#ifndef StateTaxResource_H_
#define StateTaxResource_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace knetikcloud {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  StateTaxResource
    : public ModelBase
{
public:
    StateTaxResource();
    virtual ~StateTaxResource();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// StateTaxResource members

    /// <summary>
    /// The iso3 code of the country, cannot be changed
    /// </summary>
    utility::string_t getCountryIso3() const;
    void setCountryIso3(utility::string_t value);
        /// <summary>
    /// Whether the state is exempt from paying the country tax
    /// </summary>
    bool getFederallyExempt() const;
    void setFederallyExempt(bool value);
        /// <summary>
    /// The name of the tax
    /// </summary>
    utility::string_t getName() const;
    void setName(utility::string_t value);
        /// <summary>
    /// The tax rate as a percentage to a maximum of two decimal places (1.5 means 1.5%)
    /// </summary>
    double getRate() const;
    void setRate(double value);
        /// <summary>
    /// The code of the state, cannot be changed
    /// </summary>
    utility::string_t getStateCode() const;
    void setStateCode(utility::string_t value);
        /// <summary>
    /// Whether the tax applies to shipping costs
    /// </summary>
    bool getTaxShipping() const;
    void setTaxShipping(bool value);
    
protected:
    utility::string_t m_Country_iso3;
    bool m_Federally_exempt;
    utility::string_t m_Name;
    double m_Rate;
    utility::string_t m_State_code;
    bool m_Tax_shipping;
    };

}
}
}
}

#endif /* StateTaxResource_H_ */
