/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * SavedAddressResource.h
 *
 * 
 */

#ifndef SavedAddressResource_H_
#define SavedAddressResource_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  SavedAddressResource
    : public ModelBase
{
public:
    SavedAddressResource();
    virtual ~SavedAddressResource();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SavedAddressResource members

    /// <summary>
    /// The first line of the address
    /// </summary>
    utility::string_t getAddress1() const;
    void setAddress1(utility::string_t value);
        /// <summary>
    /// A second line of the address
    /// </summary>
    utility::string_t getAddress2() const;
    void setAddress2(utility::string_t value);
    bool address2IsSet() const;
    void unsetAddress2();
    /// <summary>
    /// The city
    /// </summary>
    utility::string_t getCity() const;
    void setCity(utility::string_t value);
        /// <summary>
    /// The iso3 code for the country
    /// </summary>
    utility::string_t getCountryCode() const;
    void setCountryCode(utility::string_t value);
        /// <summary>
    /// 
    /// </summary>
    bool getDefault() const;
    void setDefault(bool value);
    bool defaultIsSet() const;
    void unsetDefault();
    /// <summary>
    /// The first name of the user
    /// </summary>
    utility::string_t getFirstName() const;
    void setFirstName(utility::string_t value);
        /// <summary>
    /// The id of the address
    /// </summary>
    int32_t getId() const;
    void setId(int32_t value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// The last name of the user
    /// </summary>
    utility::string_t getLastName() const;
    void setLastName(utility::string_t value);
        /// <summary>
    /// The name of the address
    /// </summary>
    utility::string_t getName() const;
    void setName(utility::string_t value);
        /// <summary>
    /// The first phone number of the user
    /// </summary>
    utility::string_t getPhone1() const;
    void setPhone1(utility::string_t value);
    bool phone1IsSet() const;
    void unsetPhone1();
    /// <summary>
    /// The second phone number of the user
    /// </summary>
    utility::string_t getPhone2() const;
    void setPhone2(utility::string_t value);
    bool phone2IsSet() const;
    void unsetPhone2();
    /// <summary>
    /// The postal code
    /// </summary>
    utility::string_t getPostalCode() const;
    void setPostalCode(utility::string_t value);
    bool postal_codeIsSet() const;
    void unsetPostal_code();
    /// <summary>
    /// The code for the state. Required if the country has states/provinces/equivalent
    /// </summary>
    utility::string_t getStateCode() const;
    void setStateCode(utility::string_t value);
    bool state_codeIsSet() const;
    void unsetState_code();

protected:
    utility::string_t m_Address1;
    utility::string_t m_Address2;
    bool m_Address2IsSet;
utility::string_t m_City;
    utility::string_t m_Country_code;
    bool m_Default;
    bool m_DefaultIsSet;
utility::string_t m_First_name;
    int32_t m_Id;
    bool m_IdIsSet;
utility::string_t m_Last_name;
    utility::string_t m_Name;
    utility::string_t m_Phone1;
    bool m_Phone1IsSet;
utility::string_t m_Phone2;
    bool m_Phone2IsSet;
utility::string_t m_Postal_code;
    bool m_Postal_codeIsSet;
utility::string_t m_State_code;
    bool m_State_codeIsSet;
};

}
}
}
}

#endif /* SavedAddressResource_H_ */
