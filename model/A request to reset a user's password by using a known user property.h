/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * A request to reset a user&#39;s password by using a known user property.h
 *
 * 
 */

#ifndef A request to reset a user&#39;s password by using a known user property_H_
#define A request to reset a user&#39;s password by using a known user property_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace knetikcloud {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  A request to reset a user&#39;s password by using a known user property
    : public ModelBase
{
public:
    A request to reset a user&#39;s password by using a known user property();
    virtual ~A request to reset a user&#39;s password by using a known user property();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// A request to reset a user&#39;s password by using a known user property members

    /// <summary>
    /// The user&#39;s email address
    /// </summary>
    utility::string_t getEmail() const;
    void setEmail(utility::string_t value);
    bool emailIsSet() const;
    void unsetEmail();
    /// <summary>
    /// The user&#39;s mobile phone number
    /// </summary>
    utility::string_t getMobileNumber() const;
    void setMobileNumber(utility::string_t value);
    bool mobile_numberIsSet() const;
    void unsetMobile_number();
    /// <summary>
    /// The user&#39;s username
    /// </summary>
    utility::string_t getUsername() const;
    void setUsername(utility::string_t value);
    bool usernameIsSet() const;
    void unsetUsername();

protected:
    utility::string_t m_Email;
    bool m_EmailIsSet;
utility::string_t m_Mobile_number;
    bool m_Mobile_numberIsSet;
utility::string_t m_Username;
    bool m_UsernameIsSet;
};

}
}
}
}

#endif /* A request to reset a user&#39;s password by using a known user property_H_ */
