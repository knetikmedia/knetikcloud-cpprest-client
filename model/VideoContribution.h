/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * VideoContribution.h
 *
 * 
 */

#ifndef VideoContribution_H_
#define VideoContribution_H_


#include "ModelBase.h"

#include "Video.h"
#include <cpprest/details/basic_types.h>
#include "Artist.h"

namespace com {
namespace knetikcloud {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  VideoContribution
    : public ModelBase
{
public:
    VideoContribution();
    virtual ~VideoContribution();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// VideoContribution members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Artist> getArtist() const;
    void setArtist(std::shared_ptr<Artist> value);
    bool artistIsSet() const;
    void unsetArtist();
    /// <summary>
    /// 
    /// </summary>
    int32_t getId() const;
    void setId(int32_t value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Video> getMedia() const;
    void setMedia(std::shared_ptr<Video> value);
    bool mediaIsSet() const;
    void unsetMedia();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRole() const;
    void setRole(utility::string_t value);
    bool roleIsSet() const;
    void unsetRole();

protected:
    std::shared_ptr<Artist> m_Artist;
    bool m_ArtistIsSet;
int32_t m_Id;
    bool m_IdIsSet;
std::shared_ptr<Video> m_Media;
    bool m_MediaIsSet;
utility::string_t m_Role;
    bool m_RoleIsSet;
};

}
}
}
}

#endif /* VideoContribution_H_ */
