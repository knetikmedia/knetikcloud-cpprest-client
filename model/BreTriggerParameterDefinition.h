/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.3.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * BreTriggerParameterDefinition.h
 *
 * 
 */

#ifndef BreTriggerParameterDefinition_H_
#define BreTriggerParameterDefinition_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace knetikcloud {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  BreTriggerParameterDefinition
    : public ModelBase
{
public:
    BreTriggerParameterDefinition();
    virtual ~BreTriggerParameterDefinition();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BreTriggerParameterDefinition members

    /// <summary>
    /// The name of the parameter. This is used as the unique identifier of this parameter
    /// </summary>
    utility::string_t getName() const;
        void setName(utility::string_t value);
    /// <summary>
    /// Whether this parameter can be left off when firing the event. Default false
    /// </summary>
    bool getOptional() const;
    bool optionalIsSet() const;
    void unsetOptional();
    void setOptional(bool value);
    /// <summary>
    /// The variable type of this parameter. See Bre Variables endpoint for list
    /// </summary>
    utility::string_t getType() const;
        void setType(utility::string_t value);

protected:
    utility::string_t m_Name;
        bool m_Optional;
    bool m_OptionalIsSet;
    utility::string_t m_Type;
    };

}
}
}
}

#endif /* BreTriggerParameterDefinition_H_ */
