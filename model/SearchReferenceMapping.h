/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.2.3.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * SearchReferenceMapping.h
 *
 * 
 */

#ifndef SearchReferenceMapping_H_
#define SearchReferenceMapping_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <map>
#include <vector>

namespace com {
namespace knetikcloud {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  SearchReferenceMapping
    : public ModelBase
{
public:
    SearchReferenceMapping();
    virtual ~SearchReferenceMapping();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SearchReferenceMapping members

    /// <summary>
    /// Unique identifier for the mapping to protect against duplicates
    /// </summary>
    utility::string_t getId() const;
        void setId(utility::string_t value);
    /// <summary>
    /// The field within the type that contains the id from the refType
    /// </summary>
    utility::string_t getRefIdField() const;
        void setRefIdField(utility::string_t value);
    /// <summary>
    /// The index type that the mapping pulls data from
    /// </summary>
    utility::string_t getRefType() const;
        void setRefType(utility::string_t value);
    /// <summary>
    /// A map whose keys are the field names in the refType and values are the field name in the type
    /// </summary>
    std::map<utility::string_t, utility::string_t>& getSourceFieldToDestinationField();
        void setSourceFieldToDestinationField(std::map<utility::string_t, utility::string_t> value);
    /// <summary>
    /// The index type that the mapping is for
    /// </summary>
    utility::string_t getType() const;
        void setType(utility::string_t value);

protected:
    utility::string_t m_Id;
        utility::string_t m_Ref_id_field;
        utility::string_t m_Ref_type;
        std::map<utility::string_t, utility::string_t> m_Source_field_to_destination_field;
        utility::string_t m_Type;
    };

}
}
}
}

#endif /* SearchReferenceMapping_H_ */
