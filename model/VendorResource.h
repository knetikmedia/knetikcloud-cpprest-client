/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.2.3.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * VendorResource.h
 *
 * 
 */

#ifndef VendorResource_H_
#define VendorResource_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <map>
#include <vector>
#include "Property.h"

namespace com {
namespace knetikcloud {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  VendorResource
    : public ModelBase
{
public:
    VendorResource();
    virtual ~VendorResource();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// VendorResource members

    /// <summary>
    /// Whether the vendor is active.  Default &#x3D; true
    /// </summary>
    bool getActive() const;
    bool activeIsSet() const;
    void unsetActive();
    void setActive(bool value);
    /// <summary>
    /// A map of additional properties, keyed on the property name (private). Must match the names and types defined in the template for this user type, or be an extra not from the template
    /// </summary>
    std::map<utility::string_t, std::shared_ptr<Property>>& getAdditionalProperties();
    bool additionalPropertiesIsSet() const;
    void unsetAdditional_properties();
    void setAdditionalProperties(std::map<utility::string_t, std::shared_ptr<Property>> value);
    /// <summary>
    /// The date the vendor was added. Unix timestamp in seconds
    /// </summary>
    int64_t getCreateDate() const;
    bool createDateIsSet() const;
    void unsetCreate_date();
    void setCreateDate(int64_t value);
    /// <summary>
    /// A description of the vendor
    /// </summary>
    utility::string_t getDescription() const;
    bool descriptionIsSet() const;
    void unsetDescription();
    void setDescription(utility::string_t value);
    /// <summary>
    /// The id of the vendor
    /// </summary>
    int32_t getId() const;
    bool idIsSet() const;
    void unsetId();
    void setId(int32_t value);
    /// <summary>
    /// The url of an image for the vendor
    /// </summary>
    utility::string_t getImageUrl() const;
    bool imageUrlIsSet() const;
    void unsetImage_url();
    void setImageUrl(utility::string_t value);
    /// <summary>
    /// Whether the vendor needs to manually approve invoices before they are paid.  A separate checkout flow is required in this case.  Default: false
    /// </summary>
    bool getManualApproval() const;
    bool manualApprovalIsSet() const;
    void unsetManual_approval();
    void setManualApproval(bool value);
    /// <summary>
    /// The name of the vendor
    /// </summary>
    utility::string_t getName() const;
        void setName(utility::string_t value);
    /// <summary>
    /// The primary email address for the vendor
    /// </summary>
    utility::string_t getPrimaryContactEmail() const;
    bool primaryContactEmailIsSet() const;
    void unsetPrimary_contact_email();
    void setPrimaryContactEmail(utility::string_t value);
    /// <summary>
    /// The name of the primary contact for the vendor
    /// </summary>
    utility::string_t getPrimaryContactName() const;
    bool primaryContactNameIsSet() const;
    void unsetPrimary_contact_name();
    void setPrimaryContactName(utility::string_t value);
    /// <summary>
    /// The primary phone number for the vendor
    /// </summary>
    utility::string_t getPrimaryContactPhone() const;
    bool primaryContactPhoneIsSet() const;
    void unsetPrimary_contact_phone();
    void setPrimaryContactPhone(utility::string_t value);
    /// <summary>
    /// The email address for sale inquiries for the vendor
    /// </summary>
    utility::string_t getSalesEmail() const;
    bool salesEmailIsSet() const;
    void unsetSales_email();
    void setSalesEmail(utility::string_t value);
    /// <summary>
    /// The email address for support inquiries for the vendor
    /// </summary>
    utility::string_t getSupportEmail() const;
    bool supportEmailIsSet() const;
    void unsetSupport_email();
    void setSupportEmail(utility::string_t value);
    /// <summary>
    /// A user template this user is validated against (private). May be null and no validation of properties will be done
    /// </summary>
    utility::string_t getTemplate() const;
    bool templateIsSet() const;
    void unsetTemplate();
    void setTemplate(utility::string_t value);
    /// <summary>
    /// The date the vendor was last updated. Unix timestamp in seconds
    /// </summary>
    int64_t getUpdateDate() const;
    bool updateDateIsSet() const;
    void unsetUpdate_date();
    void setUpdateDate(int64_t value);
    /// <summary>
    /// The url for the vendor&#39;s site
    /// </summary>
    utility::string_t getUrl() const;
    bool urlIsSet() const;
    void unsetUrl();
    void setUrl(utility::string_t value);

protected:
    bool m_Active;
    bool m_ActiveIsSet;
    std::map<utility::string_t, std::shared_ptr<Property>> m_Additional_properties;
    bool m_Additional_propertiesIsSet;
    int64_t m_Create_date;
    bool m_Create_dateIsSet;
    utility::string_t m_Description;
    bool m_DescriptionIsSet;
    int32_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Image_url;
    bool m_Image_urlIsSet;
    bool m_Manual_approval;
    bool m_Manual_approvalIsSet;
    utility::string_t m_Name;
        utility::string_t m_Primary_contact_email;
    bool m_Primary_contact_emailIsSet;
    utility::string_t m_Primary_contact_name;
    bool m_Primary_contact_nameIsSet;
    utility::string_t m_Primary_contact_phone;
    bool m_Primary_contact_phoneIsSet;
    utility::string_t m_Sales_email;
    bool m_Sales_emailIsSet;
    utility::string_t m_Support_email;
    bool m_Support_emailIsSet;
    utility::string_t m_Template;
    bool m_TemplateIsSet;
    int64_t m_Update_date;
    bool m_Update_dateIsSet;
    utility::string_t m_Url;
    bool m_UrlIsSet;
};

}
}
}
}

#endif /* VendorResource_H_ */
