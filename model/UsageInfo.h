/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.2.3.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * UsageInfo.h
 *
 * 
 */

#ifndef UsageInfo_H_
#define UsageInfo_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace knetikcloud {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  UsageInfo
    : public ModelBase
{
public:
    UsageInfo();
    virtual ~UsageInfo();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// UsageInfo members

    /// <summary>
    /// The number of requests within the range
    /// </summary>
    int64_t getCount() const;
    bool countIsSet() const;
    void unsetCount();
    void setCount(int64_t value);
    /// <summary>
    /// The date at the start of the range (see granularity)
    /// </summary>
    int64_t getDate() const;
    bool dateIsSet() const;
    void unsetdate();
    void setDate(int64_t value);
    /// <summary>
    /// The http method
    /// </summary>
    utility::string_t getMethod() const;
    bool methodIsSet() const;
    void unsetMethod();
    void setMethod(utility::string_t value);
    /// <summary>
    /// The url path
    /// </summary>
    utility::string_t getUrl() const;
    bool urlIsSet() const;
    void unsetUrl();
    void setUrl(utility::string_t value);

protected:
    int64_t m_Count;
    bool m_CountIsSet;
    int64_t m_date;
    bool m_dateIsSet;
    utility::string_t m_Method;
    bool m_MethodIsSet;
    utility::string_t m_Url;
    bool m_UrlIsSet;
};

}
}
}
}

#endif /* UsageInfo_H_ */
