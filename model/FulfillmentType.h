/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.3.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * FulfillmentType.h
 *
 * 
 */

#ifndef FulfillmentType_H_
#define FulfillmentType_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace knetikcloud {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  FulfillmentType
    : public ModelBase
{
public:
    FulfillmentType();
    virtual ~FulfillmentType();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// FulfillmentType members

    /// <summary>
    /// Whether the type is core and cannot be altered/deleted, read-only
    /// </summary>
    bool getCore() const;
    bool coreIsSet() const;
    void unsetCore();
    void setCore(bool value);
    /// <summary>
    /// A description of the type
    /// </summary>
    utility::string_t getDescription() const;
    bool descriptionIsSet() const;
    void unsetDescription();
    void setDescription(utility::string_t value);
    /// <summary>
    /// The unique id of the type, read-only
    /// </summary>
    int32_t getId() const;
    bool idIsSet() const;
    void unsetId();
    void setId(int32_t value);
    /// <summary>
    /// The name of the type
    /// </summary>
    utility::string_t getName() const;
        void setName(utility::string_t value);

protected:
    bool m_Core;
    bool m_CoreIsSet;
    utility::string_t m_Description;
    bool m_DescriptionIsSet;
    int32_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Name;
    };

}
}
}
}

#endif /* FulfillmentType_H_ */
