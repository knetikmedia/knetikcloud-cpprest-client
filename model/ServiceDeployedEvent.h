/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.3.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * ServiceDeployedEvent.h
 *
 * 
 */

#ifndef ServiceDeployedEvent_H_
#define ServiceDeployedEvent_H_


#include "BreTriggerResource.h"
#include "BroadcastableEvent.h"
#include <cpprest/details/basic_types.h>
#include "Object.h"
#include "ResourceTypeDescription.h"
#include <vector>

namespace com {
namespace knetikcloud {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  ServiceDeployedEvent
    : public BroadcastableEvent
{
public:
    ServiceDeployedEvent();
    virtual ~ServiceDeployedEvent();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ServiceDeployedEvent members

    /// <summary>
    /// The events fired by this service
    /// </summary>
    std::vector<std::shared_ptr<BreTriggerResource>>& getEvents();
        void setEvents(std::vector<std::shared_ptr<BreTriggerResource>> value);
    /// <summary>
    /// The resources managed by this service
    /// </summary>
    std::vector<std::shared_ptr<ResourceTypeDescription>>& getResources();
        void setResources(std::vector<std::shared_ptr<ResourceTypeDescription>> value);
    /// <summary>
    /// The unique name for the service. This serves as the unique identifier. Cannot be changed after creation
    /// </summary>
    utility::string_t getServiceName() const;
        void setServiceName(utility::string_t value);
    /// <summary>
    /// The url of the swagger doc
    /// </summary>
    utility::string_t getSwaggerUrl() const;
        void setSwaggerUrl(utility::string_t value);

protected:
    std::vector<std::shared_ptr<BreTriggerResource>> m_Events;
        std::vector<std::shared_ptr<ResourceTypeDescription>> m_Resources;
        utility::string_t m_Service_name;
        utility::string_t m_Swagger_url;
    };

}
}
}
}

#endif /* ServiceDeployedEvent_H_ */
