/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.2.3.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * Consumable.h
 *
 * 
 */

#ifndef Consumable_H_
#define Consumable_H_


#include "Behavior.h"
#include <cpprest/details/basic_types.h>

namespace com {
namespace knetikcloud {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  Consumable
    : public Behavior
{
public:
    Consumable();
    virtual ~Consumable();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Consumable members

    /// <summary>
    /// The maximum number of times an item can be used
    /// </summary>
    int32_t getMaxUse() const;
    bool maxUseIsSet() const;
    void unsetMax_use();
    void setMaxUse(int32_t value);

protected:
    int32_t m_Max_use;
    bool m_Max_useIsSet;
};

}
}
}
}

#endif /* Consumable_H_ */
