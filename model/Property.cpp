/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.2.3.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */



#include "Property.h"

namespace com {
namespace knetikcloud {
namespace client {
namespace model {

Property::Property()
{
    m_Type = U("");
}

Property::~Property()
{
}

void Property::validate()
{
    // TODO: implement validation
}

web::json::value Property::toJson() const
{
    web::json::value val = web::json::value::object();

    val[U("type")] = ModelBase::toJson(m_Type);

    return val;
}

void Property::fromJson(web::json::value& val)
{
    setType(ModelBase::stringFromJson(val[U("type")]));
}

void Property::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix[namePrefix.size() - 1] != U('.'))
    {
        namePrefix += U(".");
    }

    multipart->add(ModelBase::toHttpContent(namePrefix + U("type"), m_Type));
}

void Property::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix[namePrefix.size() - 1] != U('.'))
    {
        namePrefix += U(".");
    }

    setType(ModelBase::stringFromHttpContent(multipart->getContent(U("type"))));
}

utility::string_t Property::getType() const
{
    return m_Type;
}


void Property::setType(utility::string_t value)
{
    m_Type = value;
    
}
}
}
}
}

