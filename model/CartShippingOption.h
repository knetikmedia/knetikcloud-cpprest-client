/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * CartShippingOption.h
 *
 * 
 */

#ifndef CartShippingOption_H_
#define CartShippingOption_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  CartShippingOption
    : public ModelBase
{
public:
    CartShippingOption();
    virtual ~CartShippingOption();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CartShippingOption members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCurrencyCode() const;
    void setCurrencyCode(utility::string_t value);
    bool currency_codeIsSet() const;
    void unsetCurrency_code();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDescription() const;
    void setDescription(utility::string_t value);
    bool descriptionIsSet() const;
    void unsetDescription();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    void setName(utility::string_t value);
    bool nameIsSet() const;
    void unsetName();
    /// <summary>
    /// 
    /// </summary>
    double getOriginalPrice() const;
    void setOriginalPrice(double value);
    bool original_priceIsSet() const;
    void unsetOriginal_price();
    /// <summary>
    /// 
    /// </summary>
    double getPrice() const;
    void setPrice(double value);
    bool priceIsSet() const;
    void unsetPrice();
    /// <summary>
    /// 
    /// </summary>
    int32_t getShippingItemId() const;
    void setShippingItemId(int32_t value);
    bool shipping_item_idIsSet() const;
    void unsetShipping_item_id();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSku() const;
    void setSku(utility::string_t value);
    bool skuIsSet() const;
    void unsetSku();
    /// <summary>
    /// 
    /// </summary>
    bool getTaxable() const;
    void setTaxable(bool value);
    bool taxableIsSet() const;
    void unsetTaxable();
    /// <summary>
    /// 
    /// </summary>
    int32_t getVendorId() const;
    void setVendorId(int32_t value);
    bool vendor_idIsSet() const;
    void unsetVendor_id();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getVendorName() const;
    void setVendorName(utility::string_t value);
    bool vendor_nameIsSet() const;
    void unsetVendor_name();

protected:
    utility::string_t m_Currency_code;
    bool m_Currency_codeIsSet;
utility::string_t m_Description;
    bool m_DescriptionIsSet;
utility::string_t m_Name;
    bool m_NameIsSet;
double m_Original_price;
    bool m_Original_priceIsSet;
double m_Price;
    bool m_PriceIsSet;
int32_t m_Shipping_item_id;
    bool m_Shipping_item_idIsSet;
utility::string_t m_Sku;
    bool m_SkuIsSet;
bool m_Taxable;
    bool m_TaxableIsSet;
int32_t m_Vendor_id;
    bool m_Vendor_idIsSet;
utility::string_t m_Vendor_name;
    bool m_Vendor_nameIsSet;
};

}
}
}
}

#endif /* CartShippingOption_H_ */
