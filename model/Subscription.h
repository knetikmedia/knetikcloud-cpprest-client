/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.3.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * Subscription.h
 *
 * 
 */

#ifndef Subscription_H_
#define Subscription_H_


#include "StoreItem.h"
#include "SubscriptionPlan.h"
#include "Behavior.h"
#include "Sku.h"
#include <cpprest/details/basic_types.h>
#include <map>
#include <vector>
#include "Property.h"

namespace com {
namespace knetikcloud {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  Subscription
    : public StoreItem
{
public:
    Subscription();
    virtual ~Subscription();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Subscription members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getAvailability() const;
    bool availabilityIsSet() const;
    void unsetAvailability();
    void setAvailability(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    int32_t getConsolidationDayOfMonth() const;
    bool consolidationDayOfMonthIsSet() const;
    void unsetConsolidation_day_of_month();
    void setConsolidationDayOfMonth(int32_t value);
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<SubscriptionPlan>>& getSubscriptionPlans();
    bool subscriptionPlansIsSet() const;
    void unsetSubscription_plans();
    void setSubscriptionPlans(std::vector<std::shared_ptr<SubscriptionPlan>> value);

protected:
    utility::string_t m_Availability;
    bool m_AvailabilityIsSet;
    int32_t m_Consolidation_day_of_month;
    bool m_Consolidation_day_of_monthIsSet;
    std::vector<std::shared_ptr<SubscriptionPlan>> m_Subscription_plans;
    bool m_Subscription_plansIsSet;
};

}
}
}
}

#endif /* Subscription_H_ */
