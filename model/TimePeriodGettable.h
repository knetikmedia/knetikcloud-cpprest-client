/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * TimePeriodGettable.h
 *
 * 
 */

#ifndef TimePeriodGettable_H_
#define TimePeriodGettable_H_


#include "ModelBase.h"

#include "Behavior.h"
#include <cpprest/details/basic_types.h>

namespace com {
namespace knetikcloud {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  TimePeriodGettable
    : public ModelBase
{
public:
    TimePeriodGettable();
    virtual ~TimePeriodGettable();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// TimePeriodGettable members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDescription() const;
    void setDescription(utility::string_t value);
    bool descriptionIsSet() const;
    void unsetDescription();
    /// <summary>
    /// Used for polymorphic type recognition and thus must match an expected type with additional properties
    /// </summary>
    utility::string_t getTypeHint() const;
    void setTypeHint(utility::string_t value);
    bool type_hintIsSet() const;
    void unsetType_hint();
    /// <summary>
    /// The time period limit
    /// </summary>
    int32_t getGetLimit() const;
    void setGetLimit(int32_t value);
        /// <summary>
    /// The name of a group of items. Multiple items with the same group name will be limited together, leave null to be assigned a random unique name. It is typical that the other properties here will be the same for all, but this is not enforced and the item being recieved will use its settings.
    /// </summary>
    utility::string_t getGroupName() const;
    void setGroupName(utility::string_t value);
    bool group_nameIsSet() const;
    void unsetGroup_name();
    /// <summary>
    /// The length of time
    /// </summary>
    int32_t getTimeLength() const;
    void setTimeLength(int32_t value);
        /// <summary>
    /// The unit of time
    /// </summary>
    utility::string_t getUnitOfTime() const;
    void setUnitOfTime(utility::string_t value);
    
protected:
    utility::string_t m_Description;
    bool m_DescriptionIsSet;
utility::string_t m_Type_hint;
    bool m_Type_hintIsSet;
int32_t m_Get_limit;
    utility::string_t m_Group_name;
    bool m_Group_nameIsSet;
int32_t m_Time_length;
    utility::string_t m_Unit_of_time;
    };

}
}
}
}

#endif /* TimePeriodGettable_H_ */
