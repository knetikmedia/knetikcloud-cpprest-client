/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * AggregateInvoiceReportResource.h
 *
 * 
 */

#ifndef AggregateInvoiceReportResource_H_
#define AggregateInvoiceReportResource_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  AggregateInvoiceReportResource
    : public ModelBase
{
public:
    AggregateInvoiceReportResource();
    virtual ~AggregateInvoiceReportResource();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// AggregateInvoiceReportResource members

    /// <summary>
    /// 
    /// </summary>
    int64_t getCount() const;
    void setCount(int64_t value);
    bool countIsSet() const;
    void unsetCount();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDate() const;
    void setDate(utility::string_t value);
    bool dateIsSet() const;
    void unsetdate();
    /// <summary>
    /// 
    /// </summary>
    double getRevenue() const;
    void setRevenue(double value);
    bool revenueIsSet() const;
    void unsetRevenue();
    /// <summary>
    /// 
    /// </summary>
    int64_t getUserCount() const;
    void setUserCount(int64_t value);
    bool user_countIsSet() const;
    void unsetUser_count();

protected:
    int64_t m_Count;
    bool m_CountIsSet;
utility::string_t m_date;
    bool m_dateIsSet;
double m_Revenue;
    bool m_RevenueIsSet;
int64_t m_User_count;
    bool m_User_countIsSet;
};

}
}
}
}

#endif /* AggregateInvoiceReportResource_H_ */
