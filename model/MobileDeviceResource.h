/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.3.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * MobileDeviceResource.h
 *
 * 
 */

#ifndef MobileDeviceResource_H_
#define MobileDeviceResource_H_


#include "DeviceResource.h"
#include <cpprest/details/basic_types.h>
#include "SimpleUserResource.h"
#include <map>
#include <vector>
#include "Property.h"

namespace com {
namespace knetikcloud {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  MobileDeviceResource
    : public DeviceResource
{
public:
    MobileDeviceResource();
    virtual ~MobileDeviceResource();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// MobileDeviceResource members

    /// <summary>
    /// The authorization code for push notifications provided by the provider platform (APNS, GCM, etc).
    /// </summary>
    utility::string_t getAuthorization() const;
    bool authorizationIsSet() const;
    void unsetAuthorization();
    void setAuthorization(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getImei() const;
    bool imeiIsSet() const;
    void unsetImei();
    void setImei(utility::string_t value);
    /// <summary>
    /// The platform used for push notifications. Only Apple and Android are supported at the moment.
    /// </summary>
    utility::string_t getNotificationPlatform() const;
    bool notificationPlatformIsSet() const;
    void unsetNotification_platform();
    void setNotificationPlatform(utility::string_t value);
    /// <summary>
    /// The phone number associated with this device if applicable, in international format
    /// </summary>
    utility::string_t getNumber() const;
    bool numberIsSet() const;
    void unsetnumber();
    void setNumber(utility::string_t value);

protected:
    utility::string_t m_Authorization;
    bool m_AuthorizationIsSet;
    utility::string_t m_Imei;
    bool m_ImeiIsSet;
    utility::string_t m_Notification_platform;
    bool m_Notification_platformIsSet;
    utility::string_t m_number;
    bool m_numberIsSet;
};

}
}
}
}

#endif /* MobileDeviceResource_H_ */
