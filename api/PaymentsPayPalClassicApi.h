/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.3.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * PaymentsPayPalClassicApi.h
 *
 * 
 */

#ifndef PaymentsPayPalClassicApi_H_
#define PaymentsPayPalClassicApi_H_


#include "ApiClient.h"

#include "CreateBillingAgreementRequest.h"
#include "CreatePayPalPaymentRequest.h"
#include "FinalizeBillingAgreementRequest.h"
#include "FinalizePayPalPaymentRequest.h"
#include "Result.h"
#include <cpprest/details/basic_types.h>

namespace com {
namespace knetikcloud {
namespace client {
namespace api {

using namespace com::knetikcloud::client::model;

class  PaymentsPayPalClassicApi
{
public:
    PaymentsPayPalClassicApi( std::shared_ptr<ApiClient> apiClient );
    virtual ~PaymentsPayPalClassicApi();
    /// <summary>
    /// Create a PayPal Classic billing agreement for the user
    /// </summary>
    /// <remarks>
    /// Returns the token that should be used to forward the user to PayPal so they can accept the agreement. &lt;br&gt;&lt;br&gt;&lt;b&gt;Permissions Needed:&lt;/b&gt; PAYPAL_CLASSIC_ADMIN or owner
    /// </remarks>
    /// <param name="request">The request to create a PayPal billing agreement (optional)</param>
    pplx::task<utility::string_t> createPayPalBillingAgreementUrl(std::shared_ptr<CreateBillingAgreementRequest> request);
    /// <summary>
    /// Create a payment token for PayPal express checkout
    /// </summary>
    /// <remarks>
    /// Returns the token that should be used to forward the user to PayPal so they can complete the checkout. &lt;br&gt;&lt;br&gt;&lt;b&gt;Permissions Needed:&lt;/b&gt; PAYPAL_CLASSIC_ADMIN or owner
    /// </remarks>
    /// <param name="request">The request to create a PayPal payment token (optional)</param>
    pplx::task<utility::string_t> createPayPalExpressCheckout(std::shared_ptr<CreatePayPalPaymentRequest> request);
    /// <summary>
    /// Finalizes a billing agreement after the user has accepted through PayPal
    /// </summary>
    /// <remarks>
    /// Returns the ID of the new payment method created for the user for the billing agreement. &lt;br&gt;&lt;br&gt;&lt;b&gt;Permissions Needed:&lt;/b&gt; PAYPAL_CLASSIC_ADMIN or owner
    /// </remarks>
    /// <param name="request">The request to finalize a PayPal billing agreement (optional)</param>
    pplx::task<int32_t> finalizePayPalBillingAgreement(std::shared_ptr<FinalizeBillingAgreementRequest> request);
    /// <summary>
    /// Finalizes a payment after the user has completed checkout with PayPal
    /// </summary>
    /// <remarks>
    /// The invoice will be marked paid/failed by asynchronous IPN callback. &lt;br&gt;&lt;br&gt;&lt;b&gt;Permissions Needed:&lt;/b&gt; PAYPAL_CLASSIC_ADMIN or owner
    /// </remarks>
    /// <param name="request">The request to finalize the payment (optional)</param>
    pplx::task<void> finalizePayPalCheckout(std::shared_ptr<FinalizePayPalPaymentRequest> request);

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* PaymentsPayPalClassicApi_H_ */

