/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * Currency.h
 *
 * 
 */

#ifndef Currency_H_
#define Currency_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  Currency
    : public ModelBase
{
public:
    Currency();
    virtual ~Currency();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Currency members

    /// <summary>
    /// 
    /// </summary>
    bool getActive() const;
    void setActive(bool value);
    bool activeIsSet() const;
    void unsetActive();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCode() const;
    void setCode(utility::string_t value);
    bool codeIsSet() const;
    void unsetCode();
    /// <summary>
    /// 
    /// </summary>
    int64_t getDateCreated() const;
    void setDateCreated(int64_t value);
    bool date_createdIsSet() const;
    void unsetDate_created();
    /// <summary>
    /// 
    /// </summary>
    int64_t getDateUpdated() const;
    void setDateUpdated(int64_t value);
    bool date_updatedIsSet() const;
    void unsetDate_updated();
    /// <summary>
    /// 
    /// </summary>
    double getFactor() const;
    void setFactor(double value);
    bool factorIsSet() const;
    void unsetFactor();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getIcon() const;
    void setIcon(utility::string_t value);
    bool iconIsSet() const;
    void unsetIcon();
    /// <summary>
    /// 
    /// </summary>
    int32_t getId() const;
    void setId(int32_t value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    void setName(utility::string_t value);
    bool nameIsSet() const;
    void unsetName();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getType() const;
    void setType(utility::string_t value);
    bool typeIsSet() const;
    void unsetType();
    /// <summary>
    /// 
    /// </summary>
    bool getVirtual() const;
    void setVirtual(bool value);
    bool virtualIsSet() const;
    void unsetVirtual();

protected:
    bool m_Active;
    bool m_ActiveIsSet;
utility::string_t m_Code;
    bool m_CodeIsSet;
int64_t m_Date_created;
    bool m_Date_createdIsSet;
int64_t m_Date_updated;
    bool m_Date_updatedIsSet;
double m_Factor;
    bool m_FactorIsSet;
utility::string_t m_Icon;
    bool m_IconIsSet;
int32_t m_Id;
    bool m_IdIsSet;
utility::string_t m_Name;
    bool m_NameIsSet;
utility::string_t m_Type;
    bool m_TypeIsSet;
bool m_Virtual;
    bool m_VirtualIsSet;
};

}
}
}
}

#endif /* Currency_H_ */
