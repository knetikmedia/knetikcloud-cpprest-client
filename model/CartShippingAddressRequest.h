/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.2.3.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * CartShippingAddressRequest.h
 *
 * 
 */

#ifndef CartShippingAddressRequest_H_
#define CartShippingAddressRequest_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace knetikcloud {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  CartShippingAddressRequest
    : public ModelBase
{
public:
    CartShippingAddressRequest();
    virtual ~CartShippingAddressRequest();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CartShippingAddressRequest members

    /// <summary>
    /// The city of the user
    /// </summary>
    utility::string_t getCity() const;
    bool cityIsSet() const;
    void unsetCity();
    void setCity(utility::string_t value);
    /// <summary>
    /// The country code of the user
    /// </summary>
    utility::string_t getCountryCodeIso3() const;
    bool countryCodeIso3IsSet() const;
    void unsetCountry_code_iso3();
    void setCountryCodeIso3(utility::string_t value);
    /// <summary>
    /// The email of the user
    /// </summary>
    utility::string_t getEmail() const;
    bool emailIsSet() const;
    void unsetEmail();
    void setEmail(utility::string_t value);
    /// <summary>
    /// The first name of the user
    /// </summary>
    utility::string_t getFirstName() const;
    bool firstNameIsSet() const;
    void unsetFirst_name();
    void setFirstName(utility::string_t value);
    /// <summary>
    /// The last name of the user
    /// </summary>
    utility::string_t getLastName() const;
    bool lastNameIsSet() const;
    void unsetLast_name();
    void setLastName(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getNamePrefix() const;
    bool namePrefixIsSet() const;
    void unsetName_prefix();
    void setNamePrefix(utility::string_t value);
    /// <summary>
    /// The order notes the user
    /// </summary>
    utility::string_t getOrderNotes() const;
    bool orderNotesIsSet() const;
    void unsetOrder_notes();
    void setOrderNotes(utility::string_t value);
    /// <summary>
    /// The phone number of the user
    /// </summary>
    utility::string_t getPhoneNumber() const;
    bool phoneNumberIsSet() const;
    void unsetPhone_number();
    void setPhoneNumber(utility::string_t value);
    /// <summary>
    /// The postal state code of the user
    /// </summary>
    utility::string_t getPostalStateCode() const;
    bool postalStateCodeIsSet() const;
    void unsetPostal_state_code();
    void setPostalStateCode(utility::string_t value);
    /// <summary>
    /// The shipping address of the user, first line
    /// </summary>
    utility::string_t getShippingAddressLine1() const;
    bool shippingAddressLine1IsSet() const;
    void unsetShipping_address_line1();
    void setShippingAddressLine1(utility::string_t value);
    /// <summary>
    /// The shipping address of the user, second line
    /// </summary>
    utility::string_t getShippingAddressLine2() const;
    bool shippingAddressLine2IsSet() const;
    void unsetShipping_address_line2();
    void setShippingAddressLine2(utility::string_t value);
    /// <summary>
    /// The zipcode of the user
    /// </summary>
    utility::string_t getZip() const;
    bool zipIsSet() const;
    void unsetZip();
    void setZip(utility::string_t value);

protected:
    utility::string_t m_City;
    bool m_CityIsSet;
    utility::string_t m_Country_code_iso3;
    bool m_Country_code_iso3IsSet;
    utility::string_t m_Email;
    bool m_EmailIsSet;
    utility::string_t m_First_name;
    bool m_First_nameIsSet;
    utility::string_t m_Last_name;
    bool m_Last_nameIsSet;
    utility::string_t m_Name_prefix;
    bool m_Name_prefixIsSet;
    utility::string_t m_Order_notes;
    bool m_Order_notesIsSet;
    utility::string_t m_Phone_number;
    bool m_Phone_numberIsSet;
    utility::string_t m_Postal_state_code;
    bool m_Postal_state_codeIsSet;
    utility::string_t m_Shipping_address_line1;
    bool m_Shipping_address_line1IsSet;
    utility::string_t m_Shipping_address_line2;
    bool m_Shipping_address_line2IsSet;
    utility::string_t m_Zip;
    bool m_ZipIsSet;
};

}
}
}
}

#endif /* CartShippingAddressRequest_H_ */
