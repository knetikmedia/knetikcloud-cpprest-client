/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * ActionResource.h
 *
 * 
 */

#ifndef ActionResource_H_
#define ActionResource_H_


#include "ModelBase.h"

#include "ActionVariableResource.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  ActionResource
    : public ModelBase
{
public:
    ActionResource();
    virtual ~ActionResource();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ActionResource members

    /// <summary>
    /// The category the action is in. All customer specific actions are in the &#39;custom&#39; category
    /// </summary>
    utility::string_t getCategory() const;
    void setCategory(utility::string_t value);
    bool categoryIsSet() const;
    void unsetCategory();
    /// <summary>
    /// The description of the action
    /// </summary>
    utility::string_t getDescription() const;
    void setDescription(utility::string_t value);
        /// <summary>
    /// The name of the action. Used as the unique id for reference
    /// </summary>
    utility::string_t getName() const;
    void setName(utility::string_t value);
        /// <summary>
    /// The variables required for the action
    /// </summary>
    std::vector<std::shared_ptr<ActionVariableResource>>& getVariables();
    
protected:
    utility::string_t m_Category;
    bool m_CategoryIsSet;
utility::string_t m_Description;
    utility::string_t m_Name;
    std::vector<std::shared_ptr<ActionVariableResource>> m_Variables;
    };

}
}
}
}

#endif /* ActionResource_H_ */
